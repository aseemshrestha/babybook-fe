{"ast":null,"code":"var _jsxFileName = \"/Users/aseshres/Desktop/babybook/babybook-fe/babybook-ui/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n} //const ReactReduxDevTools =\n//window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet store;\nconst persistedState = loadFromLocalStorage();\n/*if (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    persistedState,\n    compose(applyMiddleware(thunk), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(rootReducer, compose(applyMiddleware(thunk)));\n}*/\n\nstore = createStore(rootReducer, persistedState, composeEnhancers(applyMiddleware(thunk)));\nstore.subscribe(() => saveToLocalStorage(store.getState()));\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/aseshres/Desktop/babybook/babybook-fe/babybook-ui/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","compose","rootReducer","Provider","thunk","saveToLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","e","console","log","loadFromLocalStorage","getItem","undefined","parse","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","persistedState","subscribe","getState","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,MAAI;AACF,UAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,eAA9B;AACD,GAHD,CAGE,OAAOK,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;;AAED,SAASG,oBAAT,GAAgC;AAC9B,MAAI;AACF,UAAMR,eAAe,GAAGG,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAxB;AACA,QAAIT,eAAe,KAAK,IAAxB,EAA8B,OAAOU,SAAP;AAC9B,WAAOT,IAAI,CAACU,KAAL,CAAWX,eAAX,CAAP;AACD,GAJD,CAIE,OAAOK,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAOK,SAAP;AACD;AACF,C,CAED;AACE;;;AACF,MAAME,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CpB,OAAxE;AAEA,IAAIqB,KAAJ;AAEA,MAAMC,cAAc,GAAGR,oBAAoB,EAA3C;AAEA;;;;;;;;;;AASAO,KAAK,GAAGvB,WAAW,CACjBG,WADiB,EAEjBqB,cAFiB,EAGjBJ,gBAAgB,CAACnB,eAAe,CAACI,KAAD,CAAhB,CAHC,CAAnB;AAKAkB,KAAK,CAACE,SAAN,CAAgB,MAAMnB,kBAAkB,CAACiB,KAAK,CAACG,QAAN,EAAD,CAAxC;AAEA7B,QAAQ,CAAC8B,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACA9B,aAAa,CAAC+B,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\n//const ReactReduxDevTools =\n  //window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store;\n\nconst persistedState = loadFromLocalStorage();\n\n/*if (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    persistedState,\n    compose(applyMiddleware(thunk), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(rootReducer, compose(applyMiddleware(thunk)));\n}*/\nstore = createStore(\n  rootReducer,\n  persistedState,\n  composeEnhancers(applyMiddleware(thunk)\n));\nstore.subscribe(() => saveToLocalStorage(store.getState()));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}