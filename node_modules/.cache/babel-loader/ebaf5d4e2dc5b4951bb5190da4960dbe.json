{"ast":null,"code":"var _jsxFileName = \"/Users/aseshres/Desktop/babybook/babybook-fe/babybook-ui/src/components/PostImages.js\";\nimport React, { Component } from \"react\";\nimport SideMenu from \"./partials/SideMenu\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport Header from \"./partials/Header\";\nimport { connect } from \"react-redux\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { Modal, ProgressBar } from \"react-bootstrap\";\nimport BabySubmitModal from \"./partials/SubmitBabyModel\";\nimport ApiService from \"../service/ApiService\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\";\nimport { LS_CHILD_INFO, POST_DATA } from \"../constants/Constants\"; // Register the plugin\n\nregisterPlugin(FilePondPluginFileValidateType, FilePondPluginFileValidateSize);\n\nclass Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      token: this.props.token,\n      username: this.props.username,\n      fullName: this.props.fullName,\n      isValid: true,\n      files: [],\n      title: \"\",\n      description: \"\",\n      album: \"\",\n      uploadPercentage: 0,\n      hasBabyRegistered: false\n    };\n\n    this.closeHandler = () => {\n      this.setState({\n        showModal: false,\n        message: \"\"\n      });\n    };\n\n    this.openHandler = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.files.length >= 1) {\n        if (this.state.album === \"\") {\n          alert(\"Album name is required\");\n          return;\n        }\n      }\n\n      const formData = new FormData();\n\n      for (var i = 0; i < this.state.files.length; i++) {\n        formData.append(\"file\", this.state.files[i]);\n      }\n\n      formData.append(\"title\", this.state.title);\n      formData.append(\"description\", this.state.description);\n      formData.append(\"album\", this.state.album);\n      const options = {\n        onUploadProgress: progressEvent => {\n          const {\n            loaded,\n            total\n          } = progressEvent;\n          let percent = Math.floor(loaded * 100 / total);\n\n          if (percent < 100) {\n            this.setState({\n              uploadPercentage: percent\n            });\n          }\n        }\n      };\n      ApiService.submitPost(formData, this.state.token, options).then(response => {\n        this.setState({\n          uploadPercentage: 100\n        }, () => {\n          setTimeout(() => {\n            this.setState({\n              uploadPercentage: 0\n            });\n          }, 1000);\n        });\n        localStorage.removeItem(POST_DATA);\n        window.location.href = \"/my-page\";\n      }).catch(error => {\n        console.log(error.response);\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.token === undefined && this.state.username === undefined) {\n      this.setState({\n        isValid: false\n      });\n    }\n\n    if (localStorage.getItem(LS_CHILD_INFO) != null) {\n      this.setState({\n        hasBabyRegistered: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      uploadPercentage,\n      hasBabyRegistered\n    } = this.state;\n\n    if (!this.state.isValid) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.closeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BabySubmitModal, {\n      token: this.state.token,\n      closePopup: this.closeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SideMenu, {\n      fullName: this.state.fullName,\n      openHandler: this.openHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-content-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      fullName: this.state.fullName,\n      email: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"panel-1\",\n      className: \"panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-hdr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, \"Document\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fw-300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, \"memories\")), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 23\n      }\n    }, \"( All posts will be private by default )\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-container show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 23\n      }\n    }, !hasBabyRegistered && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"help-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, \"You need to register your child. Please do register to submit this form.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"simpleinput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 27\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      className: \"form-control\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"help-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 27\n      }\n    }, \"What is the post about ? E.g. any events like birthdays or casual ( required )\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"example-textarea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 27\n      }\n    }, \"More\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"description\",\n      name: \"description\",\n      rows: \"5\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"help-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 27\n      }\n    }, \"Describe this memory.\")), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }), \" Photos\", /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"example-Image Upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 27\n      }\n    }, \"Upload photos ( if any )\"), /*#__PURE__*/React.createElement(FilePond //  ref={(ref) => (this.pond = ref)}\n    , {\n      files: this.state.files,\n      allowMultiple: true,\n      maxFiles: 100,\n      acceptedFileTypes: [\"image/*\"],\n      maxFileSize: \"5MB\",\n      onupdatefiles: fileItems => {\n        this.setState({\n          files: fileItems.map(fileItem => fileItem.file)\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, uploadPercentage > 0 && /*#__PURE__*/React.createElement(ProgressBar, {\n      now: uploadPercentage,\n      active: \"true\",\n      label: `${uploadPercentage}%`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"album\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 27\n      }\n    }, \"Album Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"album\",\n      name: \"album\",\n      className: \"form-control\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"help-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 27\n      }\n    }, \"Album Name ( required if you are uploading photos)\")), hasBabyRegistered ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-lg btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 27\n      }\n    }, \"Submit\") : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"help-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 27\n      }\n    }, \"You need to register your child. Please do register to submit this form.\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-content-overlay\",\n      \"data-action\": \"toggle\",\n      \"data-class\": \"mobile-nav-on\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    fullName: state.auth.fullName\n  };\n};\n\nexport default connect(mapStateToProps, null)(withRouter(Posts));","map":{"version":3,"sources":["/Users/aseshres/Desktop/babybook/babybook-fe/babybook-ui/src/components/PostImages.js"],"names":["React","Component","SideMenu","withRouter","Redirect","Header","connect","Modal","ProgressBar","BabySubmitModal","ApiService","FilePond","registerPlugin","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","LS_CHILD_INFO","POST_DATA","Posts","state","token","props","username","fullName","isValid","files","title","description","album","uploadPercentage","hasBabyRegistered","closeHandler","setState","showModal","message","openHandler","handleChange","e","target","id","value","handleSubmit","preventDefault","length","alert","formData","FormData","i","append","options","onUploadProgress","progressEvent","loaded","total","percent","Math","floor","submitPost","then","response","setTimeout","localStorage","removeItem","window","location","href","catch","error","console","log","componentDidMount","undefined","getItem","render","fileItems","map","fileItem","file","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SideMenu from \"./partials/SideMenu\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport Header from \"./partials/Header\";\nimport { connect } from \"react-redux\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { Modal, ProgressBar } from \"react-bootstrap\";\nimport BabySubmitModal from \"./partials/SubmitBabyModel\";\nimport ApiService from \"../service/ApiService\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\";\nimport { LS_CHILD_INFO, POST_DATA } from \"../constants/Constants\";\n\n// Register the plugin\nregisterPlugin(FilePondPluginFileValidateType, FilePondPluginFileValidateSize);\n\nclass Posts extends Component {\n  state = {\n    token: this.props.token,\n    username: this.props.username,\n    fullName: this.props.fullName,\n    isValid: true,\n    files: [],\n    title: \"\",\n    description: \"\",\n    album: \"\",\n    uploadPercentage: 0,\n    hasBabyRegistered: false,\n  };\n\n  componentDidMount() {\n    if (this.state.token === undefined && this.state.username === undefined) {\n      this.setState({\n        isValid: false,\n      });\n    }\n    if (localStorage.getItem(LS_CHILD_INFO) != null) {\n      this.setState({\n        hasBabyRegistered: true,\n      });\n    }\n  }\n  closeHandler = () => {\n    this.setState({ showModal: false, message: \"\" });\n  };\n\n  openHandler = () => {\n    this.setState({ showModal: true });\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.state.files.length >= 1) {\n      if (this.state.album === \"\") {\n        alert(\"Album name is required\");\n        return;\n      }\n    }\n\n    const formData = new FormData();\n    for (var i = 0; i < this.state.files.length; i++) {\n      formData.append(\"file\", this.state.files[i]);\n    }\n    formData.append(\"title\", this.state.title);\n    formData.append(\"description\", this.state.description);\n    formData.append(\"album\", this.state.album);\n    const options = {\n      onUploadProgress: (progressEvent) => {\n        const { loaded, total } = progressEvent;\n        let percent = Math.floor((loaded * 100) / total);\n        if (percent < 100) {\n          this.setState({ uploadPercentage: percent });\n        }\n      },\n    };\n    ApiService.submitPost(formData, this.state.token, options)\n      .then((response) => {\n        this.setState({ uploadPercentage: 100 }, () => {\n          setTimeout(() => {\n            this.setState({\n              uploadPercentage: 0,\n            });\n          }, 1000);\n        });\n        localStorage.removeItem(POST_DATA);\n        window.location.href = \"/my-page\";\n      })\n      .catch((error) => {\n        console.log(error.response);\n      });\n  };\n\n  render() {\n    const { uploadPercentage, hasBabyRegistered } = this.state;\n\n    if (!this.state.isValid) {\n      return <Redirect to={\"/\"} />;\n    }\n\n    return (\n      <div>\n        <Modal show={this.state.showModal} onHide={this.closeHandler}>\n          <BabySubmitModal\n            token={this.state.token}\n            closePopup={this.closeHandler}\n          />\n        </Modal>\n        <div className=\"page-wrapper\">\n          <div className=\"page-inner\">\n            <SideMenu\n              fullName={this.state.fullName}\n              openHandler={this.openHandler}\n            />\n\n            <div className=\"page-content-wrapper\">\n              <Header\n                fullName={this.state.fullName}\n                email={this.state.username}\n              />\n              <div className=\"col-xl-6\">\n                <div id=\"panel-1\" className=\"panel\">\n                  <div className=\"panel-hdr\">\n                    <h2>\n                      Document{\" \"}\n                      <span className=\"fw-300\">\n                        <i>memories</i>\n                      </span>\n                      <small>( All posts will be private by default )</small>\n                    </h2>\n                  </div>\n\n                  <div className=\"panel-container show\">\n                    <div className=\"panel-content\">\n                      <span>\n                        {!hasBabyRegistered && (\n                          <span className=\"help-text\">\n                            <code>\n                              You need to register your child. Please do\n                              register to submit this form.\n                            </code>\n                            <br />\n                            <br />\n                          </span>\n                        )}\n                      </span>\n                      <form\n                        onSubmit={this.handleSubmit}\n                        encType=\"multipart/form-data\"\n                      >\n                        <div className=\"form-group\">\n                          <label className=\"form-label\" htmlFor=\"simpleinput\">\n                            Title\n                          </label>\n                          <input\n                            type=\"text\"\n                            id=\"title\"\n                            name=\"title\"\n                            className=\"form-control\"\n                            onChange={this.handleChange}\n                          />\n                          <span className=\"help-block\">\n                            What is the post about ? E.g. any events like\n                            birthdays or casual ( required )\n                          </span>\n                        </div>\n                        <div className=\"form-group\">\n                          <label\n                            className=\"form-label\"\n                            htmlFor=\"example-textarea\"\n                          >\n                            More\n                          </label>\n                          <textarea\n                            className=\"form-control\"\n                            id=\"description\"\n                            name=\"description\"\n                            rows=\"5\"\n                            onChange={this.handleChange}\n                          ></textarea>\n                          <span className=\"help-block\">\n                            Describe this memory.\n                          </span>\n                        </div>\n                        <i className=\"fa fa-photo\"></i> Photos\n                        <hr />\n                        <div className=\"form-group\">\n                          <label\n                            className=\"form-label\"\n                            htmlFor=\"example-Image Upload\"\n                          >\n                            Upload photos ( if any )\n                          </label>\n\n                          <FilePond\n                            //  ref={(ref) => (this.pond = ref)}\n                            files={this.state.files}\n                            allowMultiple={true}\n                            maxFiles={100}\n                            acceptedFileTypes={[\"image/*\"]}\n                            maxFileSize={\"5MB\"}\n                            onupdatefiles={(fileItems) => {\n                              this.setState({\n                                files: fileItems.map(\n                                  (fileItem) => fileItem.file\n                                ),\n                              });\n                            }}\n                          ></FilePond>\n                        </div>\n                        <div className=\"form-group\">\n                          {uploadPercentage > 0 && (\n                            <ProgressBar\n                              now={uploadPercentage}\n                              active=\"true\"\n                              label={`${uploadPercentage}%`}\n                            />\n                          )}\n                        </div>\n                        <div className=\"form-group\">\n                          <label className=\"form-label\" htmlFor=\"album\">\n                            Album Name\n                          </label>\n                          <input\n                            type=\"text\"\n                            id=\"album\"\n                            name=\"album\"\n                            className=\"form-control\"\n                            onChange={this.handleChange}\n                          />\n                          <span className=\"help-block\">\n                            Album Name ( required if you are uploading photos)\n                          </span>\n                        </div>\n                        {hasBabyRegistered ? (\n                          <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-lg btn-block\"\n                          >\n                            Submit\n                          </button>\n                        ) : (\n                          <span className=\"help-block\">\n                            You need to register your child. Please do register\n                            to submit this form.\n                          </span>\n                        )}\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div\n                className=\"page-content-overlay\"\n                data-action=\"toggle\"\n                data-class=\"mobile-nav-on\"\n              ></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    fullName: state.auth.fullName,\n  };\n};\nexport default connect(mapStateToProps, null)(withRouter(Posts));\n"]},"metadata":{},"sourceType":"module"}