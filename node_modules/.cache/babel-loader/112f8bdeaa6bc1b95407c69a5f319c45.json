{"ast":null,"code":"var _jsxFileName = \"/Users/aseshres/Desktop/babybook/babybook-fe/babybook-ui/src/components/PostVideo.js\";\nimport React, { Component } from \"react\";\nimport SideMenu from \"./partials/SideMenu\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport Header from \"./partials/Header\";\nimport { connect } from \"react-redux\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { Modal, ProgressBar } from \"react-bootstrap\";\nimport BabySubmitModal from \"./partials/SubmitBabyModel\";\nimport ApiService from \"../service/ApiService\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\"; // Register the plugin\n\nregisterPlugin(FilePondPluginFileValidateType, FilePondPluginFileValidateSize);\n\nclass PostVideo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      token: this.props.token,\n      username: this.props.username,\n      fullName: this.props.fullName,\n      isValid: true,\n      files: [],\n      title: \"\",\n      description: \"\",\n      uploadPercentage: 0\n    };\n\n    this.closeHandler = () => {\n      this.setState({\n        showModal: false,\n        message: \"\"\n      });\n    };\n\n    this.openHandler = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const formData = new FormData();\n\n      for (var i = 0; i < this.state.files.length; i++) {\n        formData.append(\"file\", this.state.files[i]);\n      }\n\n      const options = {\n        onUploadProgress: progressEvent => {\n          const {\n            loaded,\n            total\n          } = progressEvent;\n          let percent = Math.floor(loaded * 100 / total);\n\n          if (percent < 100) {\n            this.setState({\n              uploadPercentage: percent\n            });\n          }\n        }\n      };\n      ApiService.submitPost(formData, this.state.token, options).then(response => {\n        this.setState({\n          album: response.data.url,\n          uploadPercentage: 100\n        }, () => {\n          setTimeout(() => {\n            this.setState({\n              uploadPercentage: 0\n            });\n          }, 1000);\n        });\n      }).catch(error => {\n        console.log(error.response);\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.token === undefined && this.state.username === undefined) {\n      this.setState({\n        isValid: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      uploadPercentage\n    } = this.state;\n\n    if (!this.state.isValid) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.closeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BabySubmitModal, {\n      token: this.state.token,\n      closePopup: this.closeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SideMenu, {\n      fullName: this.state.fullName,\n      openHandler: this.openHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-content-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      fullName: this.state.fullName,\n      email: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"panel-1\",\n      className: \"panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-hdr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, \"Document\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fw-300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, \"memories\")), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 23\n      }\n    }, \"( All posts will be private by default )\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-container show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"simpleinput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 27\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      className: \"form-control\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"help-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 27\n      }\n    }, \"What is the post about ? E.g. any events like birthdays or casual ( required )\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"example-textarea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 27\n      }\n    }, \"More\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"description\",\n      name: \"description\",\n      rows: \"5\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"help-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 27\n      }\n    }, \"Describe this memory.\")), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-video\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }), \" Video\", /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"example-Image Upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 27\n      }\n    }, \"Upload Videos ( if any )\"), /*#__PURE__*/React.createElement(FilePond //  ref={(ref) => (this.pond = ref)}\n    , {\n      files: this.state.files,\n      allowMultiple: true,\n      maxFiles: 100,\n      acceptedFileTypes: [\"video/*\"],\n      maxFileSize: \"5MB\",\n      onupdatefiles: fileItems => {\n        this.setState({\n          files: fileItems.map(fileItem => fileItem.file)\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, uploadPercentage > 0 && /*#__PURE__*/React.createElement(ProgressBar, {\n      now: uploadPercentage,\n      active: \"true\",\n      label: `${uploadPercentage}%`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-video\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }), \" Videos\", /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"videos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 27\n      }\n    }, \"Video Links ( if any )\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"videos\",\n      name: \"videos\",\n      onChange: this.handleChange,\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"help-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 27\n      }\n    }, \"Only youtube and video vimeo are supported \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-lg btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, \"Submit\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-content-overlay\",\n      \"data-action\": \"toggle\",\n      \"data-class\": \"mobile-nav-on\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    fullName: state.auth.fullName\n  };\n};\n\nexport default connect(mapStateToProps, null)(withRouter(PostVideo));","map":{"version":3,"sources":["/Users/aseshres/Desktop/babybook/babybook-fe/babybook-ui/src/components/PostVideo.js"],"names":["React","Component","SideMenu","withRouter","Redirect","Header","connect","Modal","ProgressBar","BabySubmitModal","ApiService","FilePond","registerPlugin","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","PostVideo","state","token","props","username","fullName","isValid","files","title","description","uploadPercentage","closeHandler","setState","showModal","message","openHandler","handleChange","e","target","id","value","handleSubmit","preventDefault","formData","FormData","i","length","append","options","onUploadProgress","progressEvent","loaded","total","percent","Math","floor","submitPost","then","response","album","data","url","setTimeout","catch","error","console","log","componentDidMount","undefined","render","fileItems","map","fileItem","file","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SideMenu from \"./partials/SideMenu\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport Header from \"./partials/Header\";\nimport { connect } from \"react-redux\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { Modal, ProgressBar } from \"react-bootstrap\";\nimport BabySubmitModal from \"./partials/SubmitBabyModel\";\nimport ApiService from \"../service/ApiService\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\";\n\n// Register the plugin\nregisterPlugin(FilePondPluginFileValidateType, FilePondPluginFileValidateSize);\n\nclass PostVideo extends Component {\n  state = {\n    token: this.props.token,\n    username: this.props.username,\n    fullName: this.props.fullName,\n    isValid: true,\n    files: [],\n    title: \"\",\n    description: \"\",\n    uploadPercentage: 0,\n  };\n\n  componentDidMount() {\n    if (this.state.token === undefined && this.state.username === undefined) {\n      this.setState({\n        isValid: false,\n      });\n    }\n  }\n  closeHandler = () => {\n    this.setState({ showModal: false, message: \"\" });\n  };\n\n  openHandler = () => {\n    this.setState({ showModal: true });\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    for (var i = 0; i < this.state.files.length; i++) {\n      formData.append(\"file\", this.state.files[i]);\n    }\n    const options = {\n      onUploadProgress: (progressEvent) => {\n        const { loaded, total } = progressEvent;\n        let percent = Math.floor((loaded * 100) / total);\n        if (percent < 100) {\n          this.setState({ uploadPercentage: percent });\n        }\n      },\n    };\n    ApiService.submitPost(formData, this.state.token, options)\n      .then((response) => {\n        this.setState(\n          { album: response.data.url, uploadPercentage: 100 },\n          () => {\n            setTimeout(() => {\n              this.setState({\n                uploadPercentage: 0,\n              });\n            }, 1000);\n          }\n        );\n      })\n      .catch((error) => {\n        console.log(error.response);\n      });\n  };\n\n  render() {\n    const { uploadPercentage } = this.state;\n    if (!this.state.isValid) {\n      return <Redirect to={\"/\"} />;\n    }\n\n    return (\n      <div>\n        <Modal show={this.state.showModal} onHide={this.closeHandler}>\n          <BabySubmitModal\n            token={this.state.token}\n            closePopup={this.closeHandler}\n          />\n        </Modal>\n        <div className=\"page-wrapper\">\n          <div className=\"page-inner\">\n            <SideMenu\n              fullName={this.state.fullName}\n              openHandler={this.openHandler}\n            />\n\n            <div className=\"page-content-wrapper\">\n              <Header\n                fullName={this.state.fullName}\n                email={this.state.username}\n              />\n              <div className=\"col-xl-6\">\n                <div id=\"panel-1\" className=\"panel\">\n                  <div className=\"panel-hdr\">\n                    <h2>\n                      Document{\" \"}\n                      <span className=\"fw-300\">\n                        <i>memories</i>\n                      </span>\n                      <small>( All posts will be private by default )</small>\n                    </h2>\n                  </div>\n                  <div className=\"panel-container show\">\n                    <div className=\"panel-content\">\n                      <form\n                        onSubmit={this.handleSubmit}\n                        encType=\"multipart/form-data\"\n                      >\n                        <div className=\"form-group\">\n                          <label className=\"form-label\" htmlFor=\"simpleinput\">\n                            Title\n                          </label>\n                          <input\n                            type=\"text\"\n                            id=\"title\"\n                            name=\"title\"\n                            className=\"form-control\"\n                            onChange={this.handleChange}\n                          />\n                          <span className=\"help-block\">\n                            What is the post about ? E.g. any events like\n                            birthdays or casual ( required )\n                          </span>\n                        </div>\n                        <div className=\"form-group\">\n                          <label\n                            className=\"form-label\"\n                            htmlFor=\"example-textarea\"\n                          >\n                            More\n                          </label>\n                          <textarea\n                            className=\"form-control\"\n                            id=\"description\"\n                            name=\"description\"\n                            rows=\"5\"\n                            onChange={this.handleChange}\n                          ></textarea>\n                          <span className=\"help-block\">\n                            Describe this memory.\n                          </span>\n                        </div>\n                        <i className=\"fa fa-video\"></i> Video\n                        <hr />\n                        <div className=\"form-group\">\n                          <label\n                            className=\"form-label\"\n                            htmlFor=\"example-Image Upload\"\n                          >\n                            Upload Videos ( if any )\n                          </label>\n\n                          <FilePond\n                            //  ref={(ref) => (this.pond = ref)}\n                            files={this.state.files}\n                            allowMultiple={true}\n                            maxFiles={100}\n                            acceptedFileTypes={[\"video/*\"]}\n                            maxFileSize={\"5MB\"}\n                            onupdatefiles={(fileItems) => {\n                              this.setState({\n                                files: fileItems.map(\n                                  (fileItem) => fileItem.file\n                                ),\n                              });\n                            }}\n                          ></FilePond>\n                        </div>\n                        <div className=\"form-group\">\n                          {uploadPercentage > 0 && (\n                            <ProgressBar\n                              now={uploadPercentage}\n                              active=\"true\"\n                              label={`${uploadPercentage}%`}\n                            />\n                          )}\n                        </div>\n                        <i className=\"fa fa-video\"></i> Videos\n                        <hr />\n                        <div className=\"form-group\">\n                          <label className=\"form-label\" htmlFor=\"videos\">\n                            Video Links ( if any )\n                          </label>\n                          <input\n                            type=\"text\"\n                            id=\"videos\"\n                            name=\"videos\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                          />\n\n                          <span className=\"help-block\">\n                            Only youtube and video vimeo are supported <br />\n                          </span>\n                          <br />\n                        </div>\n                        <button\n                          type=\"submit\"\n                          className=\"btn btn-primary btn-lg btn-block\"\n                        >\n                          Submit\n                        </button>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div\n                className=\"page-content-overlay\"\n                data-action=\"toggle\"\n                data-class=\"mobile-nav-on\"\n              ></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    fullName: state.auth.fullName,\n  };\n};\nexport default connect(mapStateToProps, null)(withRouter(PostVideo));\n"]},"metadata":{},"sourceType":"module"}